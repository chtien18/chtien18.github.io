2023-07-05 23:13:04,038 - pyswarms.single.global_best - INFO - Optimize for 200 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-07-05 23:13:04,210 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -1.031628453474682, best pos: [-0.08984005  0.71265609]
2023-07-05 23:16:30,231 - pyswarms.single.global_best - INFO - Optimize for 200 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-07-05 23:16:30,392 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -1.0316284534873323, best pos: [-0.08984137  0.71265602]
2023-07-05 23:31:09,915 - pyswarms.single.global_best - INFO - Optimize for 200 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-07-05 23:31:10,077 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -1.0316284534787417, best pos: [-0.08984157  0.7126575 ]
2023-07-05 23:36:09,980 - pyswarms.single.global_best - INFO - Optimize for 500 iters with {'c1': 5, 'c2': 5, 'w': 0.5}
2023-07-06 00:05:44,585 - pyswarms.single.global_best - INFO - Optimize for 5000 iters with {'c1': 5, 'c2': 5, 'w': 0.3}
2023-07-06 00:05:46,214 - tensorflow - WARNING - 5 out of the last 5 calls to <function Model.make_predict_function.<locals>.predict_function at 0x000002C7325DB1F0> triggered tf.function retracing. Tracing is expensive and the excessive number of tracings could be due to (1) creating @tf.function repeatedly in a loop, (2) passing tensors with different shapes, (3) passing Python objects instead of tensors. For (1), please define your @tf.function outside of the loop. For (2), @tf.function has reduce_retracing=True option that can avoid unnecessary retracing. For (3), please refer to https://www.tensorflow.org/guide/function#controlling_retracing and https://www.tensorflow.org/api_docs/python/tf/function for  more details.
2023-07-06 00:05:46,428 - tensorflow - WARNING - 6 out of the last 6 calls to <function Model.make_predict_function.<locals>.predict_function at 0x000002C73268DAF0> triggered tf.function retracing. Tracing is expensive and the excessive number of tracings could be due to (1) creating @tf.function repeatedly in a loop, (2) passing tensors with different shapes, (3) passing Python objects instead of tensors. For (1), please define your @tf.function outside of the loop. For (2), @tf.function has reduce_retracing=True option that can avoid unnecessary retracing. For (3), please refer to https://www.tensorflow.org/guide/function#controlling_retracing and https://www.tensorflow.org/api_docs/python/tf/function for  more details.
2023-07-06 00:07:31,675 - pyswarms.single.global_best - INFO - Optimize for 5000 iters with {'c1': 5, 'c2': 5, 'w': 0.3}
